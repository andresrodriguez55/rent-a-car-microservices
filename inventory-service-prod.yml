spring:
    application:
        name: inventory-service
    datasource:
        password: postgres
        url: jdbc:postgresql://localhost:5432/inventorydb
        username: postgres
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    kafka:
        producer:
            bootstrap-servers: http://localhost:9092
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: http://localhost:9092
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: "*"
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://localhost:8761/eureka
    instance:
        instance-id: ${spring.application.name}:${random.value}
        prefer-ip-address: true
server:
    port: 0

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost/api/v2/spans